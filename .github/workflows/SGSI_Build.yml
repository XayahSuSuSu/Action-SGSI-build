name: SGSI_Build

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM_URL'
        required: true
        default: 'https://bigota.d.miui.com/V12.5.3.0.RGGINXM/miui_BEGONIAININGlobal_V12.5.3.0.RGGINXM_cd8489fd26_11.0.zip'
      ZIP_NAME:
        description: 'ZIP_NAME'
        required: true
        default: 'update.zip'
      OS_TYPE:
        description: 'OS_TYPE'
        required: true
        default: 'miui'
      REPACK_NAME:
        description: 'REPACK_NAME'
        required: true
        default: 'Miui_RN8Pro_SGSI.zip'




jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: 获取本仓库源码...
        uses: actions/checkout@main

      - name: 获取变量配置...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV

      - name: 清理环境...
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: 配置环境...
        run: |
          sudo apt-get install -y git wget git zip unzip curl axel

      - name: 获取SGSI工具...
        run: |
          git clone --recurse-submodules https://github.com/xiaoxindada/SGSI-build-tool.git -b 11 $GITHUB_WORKSPACE/Tool-SGSI-build

      - name: 替换自定义精简内容...
        run: |
          sudo rm -rf $GITHUB_WORKSPACE/Tool-SGSI-build/apps_clean
          sudo cp -r apps_clean $GITHUB_WORKSPACE/Tool-SGSI-build/apps_clean
          sudo chmod 777 -R $GITHUB_WORKSPACE/Tool-SGSI-build

      - name: 下载ROM...
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          mkdir ./tmp
          curl "${{ github.event.inputs.ROM_URL }}" --output "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/${{ github.event.inputs.ZIP_NAME }}"
          echo "zip_file: $(ls "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/")"

      - name: 配置工具环境...
        run: |
          sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
          java -version

      - name: 制作AB型GSI...
        run: |
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/make.sh AB << EOF
          ${{ github.event.inputs.ZIP_NAME }}
          y
          y
          ${{ github.event.inputs.OS_TYPE }}
          y

      - name: 打包...
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          pwd
          zip -r ${{ github.event.inputs.REPACK_NAME }} SGSI/*
          ls "${{ github.event.inputs.REPACK_NAME }}"
          echo "--------------------------------------"
          ls
          echo "--------------------------------------"
          mkdir upload
          echo "--------------------------------------"
          ls upload
          echo "--------------------------------------"
          if [ $(ls -l ${{ github.event.inputs.REPACK_NAME }} | awk '{print $5}') -gt 2147483647 ]; then tar cvzpf - ${{ github.event.inputs.REPACK_NAME }} | split -d -b 1024m - upload/${{ github.event.inputs.REPACK_NAME }}; else mv ${{ github.event.inputs.REPACK_NAME }} upload/${{ github.event.inputs.REPACK_NAME }}; fi
          echo "--------------------------------------"
          ls upload
          echo "--------------------------------------"

      - name: 上传至Release...
        uses: ncipollo/release-action@v1.8.0
        with:
          artifacts: "${{ github.workspace }}/Tool-SGSI-build/upload/*"
          tag: "${{ github.event.inputs.REPACK_NAME }}_${{ env.BUILD_TIME }}"
          bodyFile: "${{ github.workspace }}/Tool-SGSI-build/SGSI/build_info.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
